diff --git a/qmic-qt/src/FilterSelector/FiltersPresenter.cpp b/qmic-qt/src/FilterSelector/FiltersPresenter.cpp
index 3d2991c..1a0c2a4 100644
--- a/qmic-qt/src/FilterSelector/FiltersPresenter.cpp
+++ b/qmic-qt/src/FilterSelector/FiltersPresenter.cpp
@@ -91,6 +91,7 @@ void FiltersPresenter::rebuildFilterViewWithSelection(const QList<QString> & key
   _filtersView->clear();
   _filtersView->disableModel();
   for (const FiltersModel::Filter & filter : _filtersModel) {
+    if (filter.absolutePathNoTags().contains("About")) continue;
     if (filter.matchKeywords(keywords)) {
       _filtersView->addFilter(filter.name(), filter.hash(), filter.path(), filter.isWarning());
     }
diff --git a/qmic-qt/src/HeadlessProcessor.cpp b/qmic-qt/src/HeadlessProcessor.cpp
index f10efc3..c11d69f 100644
--- a/qmic-qt/src/HeadlessProcessor.cpp
+++ b/qmic-qt/src/HeadlessProcessor.cpp
@@ -267,7 +267,7 @@ void HeadlessProcessor::endApplication(const QString & errorMessage)
   if (!errorMessage.isEmpty()) {
     Logger::error(errorMessage);
   }
-  QCoreApplication::exit(!errorMessage.isEmpty());
+//  QCoreApplication::exit(!errorMessage.isEmpty());
 }
 
 } // namespace GmicQt
